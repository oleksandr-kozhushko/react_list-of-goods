{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","goods","isGoodsVisible","maxLength","showGoods","setState","resetGoods","reverseGoods","reverse","sortAlphaBetically","sort","firstGood","secondGood","localeCompare","sortByLength","length","selectGoods","value","this","preparedGoods","filter","good","className","type","onClick","name","id","onChange","event","target","map","React","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"mPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UASWC,EAAb,4MACEC,MAAe,CACbC,MAAOH,EACPI,gBAAgB,EAChBC,UAAW,GAJf,EAOEC,UAAY,WACV,EAAKC,UAAS,SAAAL,GAAK,MAAK,CAAEE,gBAAiBF,EAAME,mBAE5C,EAAKF,MAAME,gBACd,EAAKI,cAXX,EAeEC,aAAe,WACb,EAAKF,UAAS,SAAAL,GAAK,MAAK,CAAEC,MAAO,YAAID,EAAMC,OAAOO,eAhBtD,EAmBEC,mBAAqB,WACnB,EAAKJ,UAAS,SAAAL,GAAK,MAAK,CACtBC,MAAO,YAAID,EAAMC,OAAOS,MAAK,SAACC,EAAWC,GAAZ,OAA2BD,EAAUE,cAAcD,WArBtF,EAyBEE,aAAe,WACb,EAAKT,UAAS,SAAAL,GAAK,MAAK,CACtBC,MAAO,YAAID,EAAMC,OAAOS,MAAK,SAACC,EAAWC,GAAZ,OAA2BD,EAAUI,OAASH,EAAWG,eA3B5F,EA+BET,WAAa,WACX,EAAKD,SAAS,CACZJ,MAAOH,EACPK,UAAW,KAlCjB,EAsCEa,YAAc,SAACC,GACb,IAAMF,GAAkBE,EAExB,EAAKZ,SAAS,CAAEF,UAAWY,KAzC/B,4CA4CE,WAAU,IAAD,OACP,EAA6CG,KAAKlB,MAA1CC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,eAAgBC,EAA/B,EAA+BA,UAEzBgB,EAAgBlB,EAAMmB,QAAO,SAAAC,GAAI,OAAIA,EAAKN,QAAUZ,KAE1D,OACE,sBAAKmB,UAAU,MAAf,UACE,uCACA,wBAAQC,KAAK,SAASC,QAASN,KAAKd,UAApC,SACGF,EAAiB,aAAe,UAElCA,GACC,qCACE,wBAAQqB,KAAK,SAASC,QAASN,KAAKX,aAApC,qBACA,wBAAQgB,KAAK,SAASC,QAASN,KAAKT,mBAApC,iCACA,wBAAQc,KAAK,SAASC,QAASN,KAAKZ,WAApC,mBACA,wBAAQiB,KAAK,SAASC,QAASN,KAAKJ,aAApC,4BACA,yBACEW,KAAK,SACLC,GAAG,SACHT,MAAOC,KAAKlB,MAAMG,UAClBwB,SAAU,SAACC,GAAD,OAAW,EAAKZ,YAAYY,EAAMC,OAAOZ,QAJrD,UAME,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,mBAEDE,EAAcW,KAAI,SAAAT,GAAI,OACrB,6BAAgBA,GAAPA,gBA/EvB,GAAyBU,IAAMC,eCnB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.40e7d0d9.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  goods: string[],\n  isGoodsVisible: boolean,\n  maxLength: number,\n};\n\nexport class App extends React.PureComponent<{}, State> {\n  state: State = {\n    goods: goodsFromServer,\n    isGoodsVisible: false,\n    maxLength: 1,\n  };\n\n  showGoods = () => {\n    this.setState(state => ({ isGoodsVisible: !state.isGoodsVisible }));\n\n    if (!this.state.isGoodsVisible) {\n      this.resetGoods();\n    }\n  };\n\n  reverseGoods = () => {\n    this.setState(state => ({ goods: [...state.goods].reverse() }));\n  };\n\n  sortAlphaBetically = () => {\n    this.setState(state => ({\n      goods: [...state.goods].sort((firstGood, secondGood) => firstGood.localeCompare(secondGood)),\n    }));\n  };\n\n  sortByLength = () => {\n    this.setState(state => ({\n      goods: [...state.goods].sort((firstGood, secondGood) => firstGood.length - secondGood.length),\n    }));\n  };\n\n  resetGoods = () => {\n    this.setState({\n      goods: goodsFromServer,\n      maxLength: 1,\n    });\n  };\n\n  selectGoods = (value: string) => {\n    const length: number = +value;\n\n    this.setState({ maxLength: length });\n  };\n\n  render() {\n    const { goods, isGoodsVisible, maxLength } = this.state;\n\n    const preparedGoods = goods.filter(good => good.length >= maxLength);\n\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n        <button type=\"button\" onClick={this.showGoods}>\n          {isGoodsVisible ? 'Hide goods' : 'Start'}\n        </button>\n        {isGoodsVisible && (\n          <>\n            <button type=\"button\" onClick={this.reverseGoods}>Reverse</button>\n            <button type=\"button\" onClick={this.sortAlphaBetically}>Sort alphabetically</button>\n            <button type=\"button\" onClick={this.resetGoods}>Reset</button>\n            <button type=\"button\" onClick={this.sortByLength}>Sort by length</button>\n            <select\n              name=\"select\"\n              id=\"select\"\n              value={this.state.maxLength}\n              onChange={(event) => this.selectGoods(event.target.value)}\n            >\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n              <option value=\"6\">6</option>\n              <option value=\"7\">7</option>\n              <option value=\"8\">8</option>\n              <option value=\"9\">9</option>\n              <option value=\"10\">10</option>\n            </select>\n            {preparedGoods.map(good => (\n              <li key={good}>{good}</li>\n            ))}\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}